function plotPointCross(n,i,e){drawSolidLine(n,i-5,e-5,i+5,e+5),drawSolidLine(n,i-5,e+5,i+5,e-5)}function plotPointCircle(n,i,e,l){n.beginPath(),n.arc(i,e,POINT_RAD_PX,0,2*Math.PI),n.fill(),n.stroke(),n.fillStyle=l,n.strokeStyle=l}function drawPoly(n,i,e,l,t){if(t<=0)return void console.log("Segment is not positive");for(var o=i,r=0,a=0;a<l.length;a++){var d=l.length-a-1;r+=l[a]*Math.pow(o,d)}for(;o<e;){nextX=o+t;for(var u=0,a=0;a<l.length;a++){var d=l.length-a-1;u+=l[a]*Math.pow(nextX,d)}var s=unitToPixel(o,"x"),x=unitToPixel(nextX,"x"),f=unitToPixel(r,"y"),v=unitToPixel(u,"y");drawSolidLine(n,s,f,x,v),o=nextX,r=u}}function drawSolidLine(n,i,e,l,t,o){n.beginPath(),n.moveTo(i,e),n.lineTo(l,t),n.closePath(),n.stroke(),n.strokeStyle=o}function unitToPixel(n,i,e,l,t,o,r,a){return n=parseFloat(n),"x"===i?e+l+(n-t)*r:"y"===i?e+l+(o-n)*a:void console.log("Direction is not defined")}function setEmptyCanvas(n,i,e,l){var t=document.getElementById(n);return null==t&&(t=graphyCreateElement("canvas",n,null,"",i)),t.width=e,t.height=l,t.style.border="1px solid lightgray",t.getContext("2d").font="12px verdana",t}function graphyCreateElement(n,i,e,l,t){var n=document.createElement(n);return null!=i&&(n.id=i),null!=e&&(n.className=e),null!=l&&(n.innerHTML=l),null!=t&&t.appendChild(n),n}var graphy=function(n,e){function l(){T=(t-2*v-2*h)/(d-u),m=(o-2*v-2*h)/(s-x),S=null,s>0&&x<0&&(S=v+h+m*s),L=null,d>0&&u<0&&(L=v+h+T*Math.abs(u)),S&&(drawSolidLine(w,v,S,t-v,S,p),drawSolidLine(w,t-v,S,t-v-c,S-c),drawSolidLine(w,t-v,S,t-v-c,S+c),w.fillText(a,t-v,S-v)),L&&(drawSolidLine(w,L,v,L,o-v,p),drawSolidLine(w,L,v,L-c,v+c,p),drawSolidLine(w,L,v,L+c,v+c,p),w.fillText(r,L+v,v)),w.fillText(0,L+5,S+15);for(var n=u;n<=d;n+=f)if(0!=n){var i=v+h+(n-u)*T;drawSolidLine(w,i,S+5,i,S-5,p),w.fillText(n,i,S+15)}for(var n=s;n>=x;n-=f)if(0!=n){var e=v+h+(s-n)*m;drawSolidLine(w,L-5,e,L+5,e,p),w.fillText(n,L+5,e+5)}}var t=500,o=500,r="y",a="x",d=5,u=-5,s=5,x=-5,f=1,v=10,h=15,c=5,p="#000",y=.1,g="graphy.js_"+Date.now(),P=setEmptyCanvas(g,n,t,o),w=P.getContext("2d"),T=null,m=null,S=null,L=null;return l(),{setup:function(n){if(null!=n){if(n.id&&(g=n.id),n.verticalName&&(r=n.verticalName),n.horizontalName&&(a=n.horizontalName),n.height&&(o=n.height),n.width&&(t=n.width),n.xMax&&(d=parseInt(n.xMax)),n.xMin&&(u=parseInt(n.xMin)),n.yMax&&(s=parseInt(n.yMax)),n.yMin&&(x=parseInt(n.yMin)),n.interval&&(f=n.interval),d<u)return void console.log("Error: Wrong input for x boundaries");if(s<x)return void console.log("Error: Wrong input for y boundaries");l()}},plotPoint:function(n,i,e){if(null!=n&&null!=i){var l=unitToPixel(n,"x",v,h,u,s,T,m),t=unitToPixel(i,"y",v,h,u,s,T,m);"cross"===e?plotPointCircle(w,l,t,p):plotPointCross(w,l,t)}},drawPoly:function(n,l){if(null!=n){var t=u,o=d;if(l&&(l[0]&&t<l[0]&&(t=l[0]),l[1]&&o>l[1]&&(o=l[1])),2===n.length){var r=n[0]*t+n[1],a=n[0]*o+n[1],x=unitToPixel(t,"x",v,h,u,s,T,m),f=unitToPixel(o,"x",v,h,u,s,T,m),c=unitToPixel(r,"y",v,h,u,s,T,m),g=unitToPixel(a,"y",v,h,u,s,T,m);drawSolidLine(w,x,c,f,g,p)}else if(n.length>2){var P=e.polynomials[i].segment?parseFloat(e.polynomials[i]):y;drawPoly(w,t,o,n,P)}}}}};